{
    "manifests": {
        "inventis/bricks-bundle": {
            "manifest": {
                "bundles": {
                    "Inventis\\Bundle\\BricksBundle\\InventisBricksBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/",
                    "Gruntfile.js": "Gruntfile.js",
                    "package.json": "package.json",
                    "assets/": "assets/"
                }
            },
            "files": {
                "Gruntfile.js": {
                    "contents": [
                        "/* eslint-disable max-len,camelcase */",
                        "// eslint-disable-next-line no-undef",
                        "module.exports = function (grunt) {",
                        "    'use strict';",
                        "    // Project configuration.",
                        "    const requireJsOptions = {",
                        "        // name: path/to/almond, // this may turn usefull if we dont want to force requireJS loading, see https://github.com/requirejs/almond",
                        "        baseUrl: './assets',",
                        "        dir: 'public',",
                        "        optimize: 'none',",
                        "        name: 'App/Main',",
                        "        writeBuildTxt: false,",
                        "        include: [], // is build below",
                        "",
                        "        wrap: true,",
                        "        keepBuildDir: true,",
                        "        findNestedDependencies: true,",
                        "        preserveLicenseComments: true,",
                        "        generateSourceMaps: true,",
                        "        insertRequire: ['App/Main'],",
                        "        paths: {",
                        "            'App': 'js',",
                        "            'Inventis/Bundle/BricksBundle': 'bundles/inventisbricks/js',",
                        "            'Inventis/Bundle/TranslationBundle': 'bundles/inventistranslation/js',",
                        "            'Inventis/Bundle/MediaBundle': 'bundles/inventismedia/js',",
                        "            'Inventis/Bundle/WebadminBundle': 'bundles/inventiswebadmin/js',",
                        "            'Inventis/Bundle/NavigationBundle': 'bundles/inventisnavigation/js',",
                        "            'Inventis/Bundle/ContentBundle': 'bundles/inventiscontent/js',",
                        "            'Inventis/Bundle/TemplateBundle': 'bundles/inventistemplate/js',",
                        "            'Inventis/Bundle/StyleguideBundle': 'bundles/inventisstyleguide/js',",
                        "            'Inventis/Bundle/SeoBundle': 'bundles/inventisseo/js',",
                        "            'Inventis/Bundle/SiteSettingsBundle': 'bundles/inventissitesettings/js',",
                        "            'Inventis/Bundle/RoutingBundle': 'bundles/inventisrouting/js',",
                        "            // vendors",
                        "            'quill': 'vendor/quill/dist',",
                        "            'grapesjs': 'vendor/grapesjs/dist/grapes.min',",
                        "            'when/es6-shim': 'vendor/when/es6-shim',",
                        "            'chartjs': 'vendor/chartjs',",
                        "            'nanoajax': 'vendor/nanoajax/nanoajax.min',",
                        "            'template-binding': 'vendor/template-binding/src/TemplateBinding',",
                        "            'observe-js': 'vendor/observe-js/src/observe',",
                        "            'node-bind': 'vendor/node-bind/src/NodeBind',",
                        "            'Draggable': 'vendor/@shopify/draggable/lib/draggable.bundle',",
                        "            'selectable': 'vendor/selectable.js/selectable',",
                        "            'moment': 'vendor/moment/moment',",
                        "            'moment-timezone': 'vendor/moment-timezone/builds/moment-timezone-with-data.min',",
                        "            '@inventis': 'vendor/@inventis'",
                        "        },",
                        "        packages: [",
                        "            {name: 'SearchString', location: 'vendor/search-string', main: 'searchString'},",
                        "        ],",
                        "        shim: {",
                        "            'nanoajax': {",
                        "                exports: 'nanoajax',",
                        "            },",
                        "            'template-binding': {",
                        "                exports: 'Platform',",
                        "                deps: ['observe-js'],",
                        "            },",
                        "            'node-bind': {",
                        "                exports: 'Platform',",
                        "                deps: ['observe-js', 'template-binding'],",
                        "            },",
                        "        },",
                        "        map: {",
                        "            '*': {",
                        "                // whenever anyone requests shopify/draggable, load draggable instead",
                        "                // as shopify does a manual define(\"Draggable\") :(",
                        "                'shopify/draggable': 'Draggable',",
                        "            },",
                        "        },",
                        "        done: function (done, output) {",
                        "            var _ = require('lodash');",
                        "            var rjsanalysis = require('rjs-build-analysis');",
                        "            var ast = rjsanalysis.parse(output);",
                        "            var cssExclude = new RegExp('\\.css$');",
                        "            ast.bundles = _.filter(ast.bundles, function (bundle) {",
                        "                return !bundle.parent.match(cssExclude);",
                        "            });",
                        "            var duplicates = rjsanalysis.duplicates(ast);",
                        "",
                        "            if (Object.keys(duplicates).length) {",
                        "                grunt.log.subhead('Duplicates found in requirejs build: ' + Object.keys(duplicates).length);",
                        "                for (var n in duplicates) {",
                        "                    if (duplicates.hasOwnProperty(n)) {",
                        "                        grunt.log.warn(duplicates[n]);",
                        "                    }",
                        "                }",
                        "                //return done(new Error('r.js built duplicate modules, please check the excludes option.'));",
                        "            }",
                        "",
                        "            return done();",
                        "        },",
                        "    };",
                        "    const includedPackages = [",
                        "        'App',",
                        "        'Inventis/Bundle/BricksBundle',",
                        "        'Inventis/Bundle/TranslationBundle',",
                        "        'Inventis/Bundle/NavigationBundle',",
                        "        'Inventis/Bundle/ContentBundle',",
                        "        'Inventis/Bundle/SeoBundle',",
                        "        'Inventis/Bundle/MediaBundle',",
                        "        'Inventis/Bundle/WebadminBundle',",
                        "        'Inventis/Bundle/SiteSettingsBundle',",
                        "        'Inventis/Bundle/RoutingBundle',",
                        "    ];",
                        "    const ignoredModules = [",
                        "        'App/Main',",
                        "        'App/app',",
                        "        'Inventis/Bundle/BricksBundle/Brick/PageContent/RunInFrame',",
                        "        'Inventis/Bundle/BricksBundle/Main',",
                        "        'Inventis/Bundle/BricksBundle/Utils',",
                        "        'Inventis/Bundle/BricksBundle/Brick/SidebarMenu',",
                        "        'Inventis/Bundle/BricksBundle/Mixins/Adapters/Renderers/Ext/FileField',",
                        "        'Inventis/Bundle/BricksBundle/Mixins/Adapters/Renderers/Ext/Grid',",
                        "        'Inventis/Bundle/BricksBundle/Brick/Form/Field/Input/File',",
                        "        'Inventis/Bundle/BricksBundle/Brick/Form/Field/Input/File/Image',",
                        "        'Inventis/Bundle/BricksBundle/Brick/ImageCropper',",
                        "        'Inventis/Bundle/BricksBundle/Mixins/Plupload',",
                        "",
                        "        // optional dependencies you can include these when you have the vendor installed and mapped",
                        "        'Inventis/Bundle/BricksBundle/Quill/QuillDeltaRenderStrategy',",
                        "        'Inventis/Bundle/BricksBundle/Quill/QuillRenderStrategyBase',",
                        "        'Inventis/Bundle/BricksBundle/Quill/QuillHtmlRenderStrategy',",
                        "        'Inventis/Bundle/BricksBundle/Quill/quillConfig'",
                        "    ];",
                        "    includedPackages.forEach((packageName) => {",
                        "        try {",
                        "            grunt.file.recurse(",
                        "                process.cwd() + '/public/' + requireJsOptions.paths[packageName],",
                        "                function (abspath, rootdir, subdir, filename) {",
                        "                    if (filename.substr(-3) !== '.js') {",
                        "                        return;",
                        "                    }",
                        "                    let name = filename.split('.').shift();",
                        "                    let include = packageName + (subdir ? '/' + subdir : '') + '/' + name;",
                        "",
                        "                    if (ignoredModules.includes(include)) {",
                        "                        return;",
                        "                    }",
                        "                    requireJsOptions.include.push(include);",
                        "                }",
                        "            );",
                        "        } catch (e) {",
                        "            console.info(e.message);",
                        "        }",
                        "    });",
                        "    grunt.initConfig({",
                        "        requirejs: {",
                        "            all: {",
                        "                options: requireJsOptions,",
                        "            },",
                        "        },",
                        "        copy: {",
                        "            node_modules: {",
                        "                cwd: 'node_modules', // set working folder / root to copy",
                        "                src: [",
                        "                    '@inventis/ckeditor5-builds/**',",
                        "                    'grapesjs/dist/**',",
                        "                    'font-awesome/css/**',",
                        "                    'font-awesome/fonts/**',",
                        "                    'chartjs/chart.js',",
                        "                    'quill/dist/**',",
                        "                    'when/es6-shim/Promise.js',",
                        "                    'requirejs/require.js',",
                        "                    'nanoajax/nanoajax.min.js',",
                        "                    '@shopify/draggable/lib/draggable.bundle.js',",
                        "                    'selectable.js/selectable.js',",
                        "                    'observe-js/src/**',",
                        "                    'template-binding/src/*.js',",
                        "                    'node-bind/src/**',",
                        "                    'moment/moment.js',",
                        "                    'moment-timezone/builds/moment-timezone-with-data.min.js',",
                        "                    '@inventis/webadmin-ui/**',",
                        "                    '!**/node_modules/**', // make sure we ignore any node_modules in packages, who does this #$@?!",
                        "                ],",
                        "                dest: 'public/vendor', // destination folder",
                        "                expand: true, // required when using cwd",
                        "            }",
                        "        },",
                        "        clean: {",
                        "            build: ['public/build'],",
                        "            vendor: ['public/vendor']",
                        "        },",
                        "        babel: {",
                        "            options: {",
                        "                sourceMap: false,",
                        "                plugins: [",
                        "                    ['@babel/plugin-transform-spread', {'loose': true}],",
                        "                    ['@babel/plugin-proposal-object-rest-spread', {'loose': true}],",
                        "                    ['@babel/plugin-proposal-class-properties']",
                        "                ],",
                        "            },",
                        "            dist: {",
                        "                files: {",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent.js': 'public/bundles/inventisbricks/js/Brick/PageContent.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/DefaultBlockConfig.js': 'public/bundles/inventisbricks/js/Brick/PageContent/DefaultBlockConfig.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/ComponentTypeDefinitionBuilder.js': 'public/bundles/inventisbricks/js/Brick/PageContent/ComponentTypeDefinitionBuilder.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/DefaultComponentsPlugin.js': 'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/DefaultComponentsPlugin.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/GrapesOverridesPlugin.js': 'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/GrapesOverridesPlugin.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/PageContentDropzoneHighlighterPlugin.js': 'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/PageContentDropzoneHighlighterPlugin.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/PageContentWrapperPlugin.js': 'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/PageContentWrapperPlugin.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/ComponentToolbarManagerPlugin.js': 'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/ComponentToolbarManagerPlugin.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/DeletableNodeListener.js': 'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/DeletableNodeListener.js',",
                        "                    'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/CustomGrapesJsBlocksPlugin.js': 'public/bundles/inventisbricks/js/Brick/PageContent/Plugin/CustomGrapesJsBlocksPlugin.js',",
                        "                    'public/bundles/inventisstyleguide/js/Block/VideoPlugin.js': 'public/bundles/inventisstyleguide/js/Block/VideoPlugin.js',",
                        "                }",
                        "            }",
                        "        },",
                        "        amdwrap: {",
                        "            searchString: {",
                        "                expand: true,",
                        "                cwd: \"./node_modules/search-string/dist/node\",",
                        "                src: [\"*.js\"],",
                        "                dest: \"./public/vendor/search-string/\"",
                        "            }",
                        "        },",
                        "        uglify: {",
                        "            prod: {",
                        "                options: {",
                        "                    mangle: true",
                        "                },",
                        "                files: [",
                        "                    {",
                        "                        expand: true,",
                        "                        src: 'public/js/**/*.js',",
                        "                        dest: 'public/js',",
                        "                        cwd: './',",
                        "                        rename: function (dst, src) {",
                        "                            // To keep src js files and make new files as *.min.js :",
                        "                            // return dst + '/' + src.replace('.js', '.min.js');",
                        "                            // Or to override to src :",
                        "                            return src;",
                        "                        }",
                        "                    },",
                        "                    {",
                        "                        expand: true,",
                        "                        src: 'public/bundles/inventis*/**/*.js',",
                        "                        dest: 'public/bundles',",
                        "                        cwd: './',",
                        "                        rename: function (dst, src) {",
                        "                            // To keep src js files and make new files as *.min.js :",
                        "                            // return dst + '/' + src.replace('.js', '.min.js');",
                        "                            // Or to override to src :",
                        "                            return src;",
                        "                        }",
                        "                    },",
                        "                ]",
                        "            }",
                        "        },",
                        "    });",
                        "",
                        "    grunt.loadNpmTasks('grunt-contrib-watch');",
                        "    grunt.loadNpmTasks('grunt-contrib-uglify-es');",
                        "    grunt.loadNpmTasks('grunt-contrib-requirejs');",
                        "    grunt.loadNpmTasks('grunt-contrib-copy');",
                        "    grunt.loadNpmTasks('grunt-contrib-clean');",
                        "    grunt.loadNpmTasks(\"grunt-amd-wrap\");",
                        "    grunt.loadNpmTasks(\"grunt-babel\");",
                        "",
                        "    // Default task(s).",
                        "    grunt.registerTask('build', ['clean', 'copy', 'amdwrap', 'babel', 'requirejs:all']);",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "assets/js/Main.js": {
                    "contents": [
                        "if (navigator !== undefined && navigator.getDeviceStorage === undefined) {",
                        "    navigator.getDeviceStorage = function () {",
                        "        throw new Error(",
                        "            'navigator.getDeviceStorage is stubbed to avoid observe-js/src/observe.js creating new functions to ' +",
                        "            'check if eval is allowed, which generates a (spurious) CSP error.'",
                        "        );",
                        "    };",
                        "}",
                        "require.config({",
                        "    waitSeconds: 20,",
                        "    /*",
                        "     * to maintain namespace in components we start from here",
                        "     * module specific code is rewritten through .htaccess",
                        "     */",
                        "    baseUrl: '/',",
                        "    paths: {",
                        "        'App': 'js',",
                        "        'Inventis/Bundle/BricksBundle': 'bundles/inventisbricks/js',",
                        "        'Inventis/Bundle/TranslationBundle': 'bundles/inventistranslation/js',",
                        "        'Inventis/Bundle/MediaBundle': 'bundles/inventismedia/js',",
                        "        'Inventis/Bundle/WebadminBundle': 'bundles/inventiswebadmin/js',",
                        "        'Inventis/Bundle/NavigationBundle': 'bundles/inventisnavigation/js',",
                        "        'Inventis/Bundle/ContentBundle': 'bundles/inventiscontent/js',",
                        "        'Inventis/Bundle/TemplateBundle': 'bundles/inventistemplate/js',",
                        "        'Inventis/Bundle/StyleguideBundle': 'bundles/inventisstyleguide/js',",
                        "        'Inventis/Bundle/RoutingBundle': 'bundles/inventisrouting/js',",
                        "        // define all vendor package loading rules below",
                        "        'quill': 'vendor/quill/dist',",
                        "        'grapesjs': 'vendor/grapesjs/dist/grapes.min',",
                        "        'Sizzle': 'vendor/sizzle/dist/sizzle.min',",
                        "        'Plupload': 'vendor/plupload/js/plupload.full',",
                        "        'when': 'vendor/when',",
                        "        'nanoajax': 'vendor/nanoajax/nanoajax.min',",
                        "        'template-binding': 'vendor/template-binding/src/TemplateBinding',",
                        "        'observe-js': 'vendor/observe-js/src/observe',",
                        "        'node-bind': 'vendor/node-bind/src/NodeBind',",
                        "        'Draggable': 'vendor/@shopify/draggable/lib/draggable.bundle',",
                        "        'selectable': 'vendor/selectable.js/selectable',",
                        "        'moment': 'vendor/moment/moment',",
                        "        'moment-timezone': 'vendor/moment-timezone/builds/moment-timezone-with-data.min',",
                        "        '@inventis': 'vendor/@inventis',",
                        "    },",
                        "    packages: [",
                        "        {name: 'SearchString', location: 'vendor/search-string', main: 'searchString'},",
                        "    ],",
                        "    map: {",
                        "        '*': {",
                        "            /*",
                        "             * whenever anyone requests shpify/draggable, load draggable instead",
                        "             * as shopify does a manual define(\"Dragable\") :(",
                        "             */",
                        "            'shopify/draggable': 'Draggable',",
                        "        },",
                        "    },",
                        "    shim: {",
                        "        'Aviary': {",
                        "            exports: 'Aviary',",
                        "        },",
                        "        'nanoajax': {",
                        "            exports: 'nanoajax',",
                        "        },",
                        "        'template-binding': {",
                        "            exports: 'Platform',",
                        "            deps: ['observe-js'],",
                        "        },",
                        "        'node-bind': {",
                        "            exports: 'Platform',",
                        "            deps: ['observe-js', 'template-binding'],",
                        "        },",
                        "    },",
                        "",
                        "    config: {",
                        "        'Inventis/Bundle/BricksBundle/Config': {",
                        "            locale: document.body.dataset.locale,",
                        "            enableBrickDebugging: document.body.dataset.enableBrickDebugging === '1',",
                        "        },",
                        "    },",
                        "});",
                        "require(",
                        "    [",
                        "        'Inventis/Bundle/BricksBundle/Brick/AttributeConfigFactory',",
                        "        'Inventis/Bundle/BricksBundle/Brick/Manager',",
                        "        'Inventis/Bundle/BricksBundle/Base64EncodedJsonParser',",
                        "    ],",
                        "    function (AttributeConfigFactory, Manager, Base64EncodedJsonParser) {",
                        "        'use strict';",
                        "",
                        "        var factory = new AttributeConfigFactory(Base64EncodedJsonParser, Manager);",
                        "        factory.create(window.document);",
                        "    }",
                        ");",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/inventis_bricksbundle.yaml": {
                    "contents": [
                        "inventis_bricks:",
                        "    supported_locales: '%supported_locales%'",
                        "",
                        "kphoen_rulerz:",
                        "    targets:",
                        "        doctrine: true",
                        "",
                        "jms_serializer:",
                        "    property_naming:",
                        "        # why this isn't the default in the bundle elides me, I understand why it may not be the default for jms, but...",
                        "        id: 'jms_serializer.identical_property_naming_strategy'",
                        "",
                        "twig:",
                        "    globals:",
                        "        enable_brick_debugging: '%kernel.debug%'",
                        ""
                    ],
                    "executable": false
                },
                "package.json": {
                    "contents": [
                        "{",
                        "    \"name\": \"@inventis/mortar\",",
                        "    \"repository\": {",
                        "        \"url\": \"https://bitbucket.org/inventis/mortar/\"",
                        "    },",
                        "    \"version\": \"1.0.0\",",
                        "    \"description\": \"Aggregates all bundles, libraries and other Symfony-related projects into one, large repository in order to simplify maintenance.\",",
                        "    \"dependencies\": {",
                        "        \"@inventis/bricks-bundle\": \"file:vendor/inventis/bricks-bundle\"",
                        "    },",
                        "    \"devDependencies\": {",
                        "        \"@babel/core\": \"^7.1.2\",",
                        "        \"@babel/plugin-proposal-class-properties\": \"^7.14.5\",",
                        "        \"@babel/plugin-proposal-object-rest-spread\": \"^7.14.5\",",
                        "        \"@babel/plugin-transform-spread\": \"^7.14.5\",",
                        "        \"eslint\": \"^4.19.1\",",
                        "        \"@inventis/coding-conventions\": \"^1.3\",",
                        "        \"eslint-plugin-jasmine\": \"^2.10.1\",",
                        "        \"grunt\": \"^1.0.3\",",
                        "        \"grunt-amd-wrap\": \"^1.0.1\",",
                        "        \"grunt-babel\": \"^8.0.0\",",
                        "        \"grunt-cli\": \"^1.3.1\",",
                        "        \"grunt-contrib-clean\": \"^1.1.0\",",
                        "        \"grunt-contrib-copy\": \"^1.0.0\",",
                        "        \"grunt-contrib-requirejs\": \"^1.0.0\",",
                        "        \"grunt-contrib-watch\": \"^1.1.0\",",
                        "        \"grunt-contrib-uglify-es\": \"^3.3.0\",",
                        "        \"jasmine\": \"^3.2.0\",",
                        "        \"jasmine-ajax\": \"^3.4.0\",",
                        "        \"karma\": \"^2.0.5\",",
                        "        \"karma-amdwrap-preprocessor\": \"^0.2.2\",",
                        "        \"karma-chrome-launcher\": \"^2.2.0\",",
                        "        \"karma-coverage\": \"^1.1.2\",",
                        "        \"karma-firefox-launcher\": \"^1.1.0\",",
                        "        \"karma-jasmine\": \"^1.1.2\",",
                        "        \"karma-junit-reporter\": \"^1.2.0\",",
                        "        \"karma-requirejs\": \"^1.1.0\",",
                        "        \"requirejs\": \"^2.3.6\",",
                        "        \"rjs-build-analysis\": \"0.0.3\",",
                        "        \"terser\": \"^4.1.3\"",
                        "    },",
                        "    \"scripts\": {",
                        "        \"preinstall\": \"[[ -f '/root/.ssh/id_rsa' ]] && ssh-add /root/.ssh/id_rsa || true\",",
                        "        \"postinstall\": \"node_modules/grunt/bin/grunt build\"",
                        "    },",
                        "    \"author\": \"Inventis\",",
                        "    \"license\": \"UNLICENSED\"",
                        "}",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "4651404c89af7faba8471647c97e4402760191f0"
        }
    }
}
